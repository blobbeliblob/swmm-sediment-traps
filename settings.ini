
# settings file for python script
# define parameters to be used during simulations

# whitespace is ignored when the file is read
# the '#' character can be used for comments (place it at beginning of row)
# empty rows are ignored
# the '=' character is used as delimiter
# dots should be used for decimals, not commas!
# the parameter (left of the '=' character) is given the value to the right of the '=' character
# yes = 1, no = 0

# about units: the python script assumes that the model units are as below, if not you may have to convert results appropriately
# flow -> liters/second
# pollutant -> milligram
# area -> ha

# path to the SWMM input file
input_file = TP_HULAKAS_.inp
# create a report at the end of a simulation
create_report = 0
# path to results file
results_file = test_results.xlsx
res_id = default

# restore backup, if available
restore_backup = 1
# create backup before modifying input file
create_backup = 1

#####################
#	NODE SEPARATION
#####################

# should new nodes be created to separate inlets from rest of network?
# if this is set to 0, the sediment traps will filter all the water passing through the junctions, including from upstream
separate_junctions = 1

# settings for node insertion (in meters)

# height offset between new node and old node
height_offset = 0.001
# length of the conduit between new node and old node
conduit_length = 2.3
# visual distance between nodes in the interface
coord_offset = 0.5
# suffix appended to the id of the new nodes to distinguish them from the old nodes
junction_suffix = _manhole

#####################
#	TREATMENT
#####################

# should treatment scenarios be created? (leave this as 1, otherwise doesn't really make sense to run at all)
create_treatment_scenarios = 1

# treatment settings

# number of random scenarios run
number_of_scenarios = 0
# number of inlets with installed filters in each run
number_of_samples = 5
# pollutant treated
pollutant = TSS
# treatment formula
# use either "R" or "C", separate by semi-colon, then formula
formula = R;0.917

# filter max pollutant capacity before needing to be changed (in kg)
max_capacity = 40

# filter maintenance interval (days)
maintenance_interval = 30

# predefined scenarios, overrides random scenarios
# separate scenarios with ";", separate nodes within scenarios with ","
use_specific_scenarios = 0
user_scenarios = IP02, IP01, IP06, IP16, IP17, IP03, IE46, IP13, IE69, IP08

# create scenarios, prioritizing user specified land use types
# separate land uses with ","
land_use_prioritization = 0
preferred_land_uses = Green, Street, Pavement

# rank junctions to evaluate individual junction impact on pollution removal
# activating this option overrides other scenarios and only creates scenarios with single junction treatment
rank_junctions = 0

#####################
#	SIMULATION
#####################

# time steps in hh:mm:ss format
REPORT_STEP = 00:01:00
WET_STEP = 00:00:04
DRY_STEP = 00:00:10
ROUTING_STEP = 00:00:03

# should the simulations be run?
run_simulations = 1

# outfall node, i.e. node of interest
outfall_node = OUT01

# dates in mm/dd/yyyy format
# if several defined, last one will override

# test (1 day with rain)
start_date = 06/04/2009
end_date = 06/04/2009

# prevent loading bar from showing, should increase performance at the cost of user experience
suppress_output = 0

#####################
#	RESULTS
#####################

# criteria according to which results will be ordered
# separate criteria with ","
# available criteria: simulation_time, total_volume, flow_error, total_TSS, quality_error, removal_mass, removal_per_area, area_covered_total
order_criteria = removal_mass

# export accumulative statistics
accumulative_statistics = 1

